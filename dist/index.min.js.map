{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 03d3587cf584c3f19e99","webpack:///./src/index.js","webpack:///./node_modules/spark-md5/spark-md5.js"],"names":["stDefaultOptions","gateway","md5Endpoint","md5SliceSize","onUpload","SuperTrans","BasePlugin","constructor","uppy","opts","id","type","Object","assign","prepareUpload","fileIDs","promises","map","fileID","file","getFile","emit","mode","message","name","computeMd5","then","getFileInfoByMd5","fileInfo","console","debug","response","uploadURL","getPlugin","endpoint","superTrans","setFileState","progress","uploadComplete","uploadStarted","setFileMeta","md5","fingerprint","catch","err","error","Promise","all","resolve","reject","fetch","md5EndPoint","method","json","selectedFile","localKey","localMd5","window","localStorage","getItem","blobSlice","File","prototype","slice","mozSlice","webkitSlice","chunkSize","data","chunks","Math","ceil","size","currentChunk","spark","SparkMD5","ArrayBuffer","fileReader","FileReader","uppy_","onload","e","log","toFixed","append","target","result","loadNext","end","setItem","start","readAsArrayBuffer","call","onerror","obj","ev","on","meta","warn","substring","lastIndexOf","url","install","addPreProcessor","uninstall","removePreProcessor"],"mappings":"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CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;;AAEd,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc;;AAEd,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;AACA;AACA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,QAAQ;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,aAAa;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,MAAM;AACrB,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C,IAAI;AAClD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,QAAQ;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,aAAa;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,YAAY;AAC3B,eAAe,QAAQ;AACvB;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"UppyTusIops\"] = factory();\n\telse\n\t\troot[\"UppyTusIops\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 03d3587cf584c3f19e99","import BasePlugin from '@uppy/core/lib/BasePlugin.js'\r\nimport SparkMD5 from \"spark-md5\"\r\n\r\nconst stDefaultOptions = {\r\n    gateway: '',\r\n    md5Endpoint: '',\r\n    md5SliceSize: 1024 * 1024 * 2, //默认文件分片大小,2MB\r\n    onUpload: null\r\n}\r\n\r\n/**\r\n * uppy文件上传插件，针对go-fastdfs相关接口封装。\r\n * 1、上传前计算文件md5,调用后台接口查询是否存在一致文件，一致直接秒传。\r\n * 2、tus上传后，如果需要显示内容，需要使用md5查询接口获取最终下载地址\r\n */\r\nexport default class SuperTrans extends BasePlugin {\r\n    constructor(uppy, opts) {\r\n        super(uppy, opts);\r\n        this.id = opts.id || 'SuperTransPlugin';\r\n        this.type = 'md5Trans';\r\n        this.opts = Object.assign(stDefaultOptions, opts);\r\n        /**\r\n         *\r\n         * @param fileIDs\r\n         * @returns {Promise<Awaited<VoidFunction>[]>}\r\n         */\r\n        this.prepareUpload = (fileIDs) => {\r\n            const promises = fileIDs.map((fileID) => {\r\n                let file = this.uppy.getFile(fileID);\r\n                this.uppy.emit('preprocess-progress', file, {\r\n                    mode: 'indeterminate',\r\n                    message: \"预处理文件[\" + file.name + \"]...\",\r\n                })\r\n                return this.computeMd5(file)\r\n                    .then(this.getFileInfoByMd5)\r\n                    .then(fileInfo => {\r\n                        if (fileInfo && fileInfo.id) {\r\n                            console.debug(\"Set File State Finish\", fileID);\r\n                            let response = {\r\n                                uploadURL: this.uppy.getPlugin(\"Tus\").opts.endpoint + \"/\" + fileInfo.id,\r\n                                superTrans: true\r\n                            }\r\n                            this.uppy.setFileState(fileID, {\r\n                                progress: {\r\n                                    uploadComplete: true,\r\n                                    uploadStarted: true\r\n                                },\r\n                                response: response\r\n                            });\r\n                            this.uppy.setFileMeta(fileID, {\r\n                                md5: fileInfo.fingerprint\r\n                            })\r\n                            file = this.uppy.getFile(fileID);\r\n                            this.uppy.emit('upload-success', file, response);\r\n                        } else {\r\n                            this.uppy.emit('preprocess-complete', file);\r\n                        }\r\n                    }).catch((err) => console.error(err))\r\n            })\r\n\r\n            return Promise.all(promises);\r\n        }\r\n        /**\r\n         * 使用文件md5值查询文件服务器是否存在相应文件\r\n         * @param md5\r\n         * @returns {Promise<JSON>}\r\n         */\r\n        this.getFileInfoByMd5 = (md5) => {\r\n            return new Promise((resolve, reject) => {\r\n                if (md5) {\r\n                    fetch(this.opts.md5EndPoint + md5, {\r\n                        method: 'GET'\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(json => {\r\n                            if (json && json.id) {\r\n                                resolve(json);\r\n                            } else {\r\n                                resolve();\r\n                            }\r\n                        })\r\n                        .catch(() => resolve());\r\n                } else {\r\n                    resolve()\r\n                }\r\n            });\r\n        }\r\n        /**\r\n         * 计算文件md5，使用文件分片方式计算，否则大文件会严重影响性能。\r\n         * 单个分片默认为\r\n         * @param selectedFile\r\n         * @returns {Promise<String>}\r\n         */\r\n        this.computeMd5 = (selectedFile) => {\r\n            return new Promise((resolve, reject) => {\r\n                let localKey = \"iops-\" + selectedFile.id;\r\n                let localMd5 = window.localStorage.getItem(localKey);\r\n                if (localMd5) {\r\n                    return resolve(localMd5);\r\n                }\r\n\r\n                let blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice;\r\n                let chunkSize = this.opts.md5SliceSize;\r\n                let file = selectedFile.data;\r\n                let chunks = Math.ceil(file.size / chunkSize);\r\n                let currentChunk = 0;\r\n                let spark = new SparkMD5.ArrayBuffer();\r\n                let fileReader = new FileReader();\r\n                let uppy_ = this.uppy;\r\n                fileReader.onload = function (e) {\r\n                    console.log(\"计算MD5[\" + file.name + \"]：\" + ((currentChunk + 1) / chunks * 100).toFixed(2) + \"%\");\r\n                    spark.append(e.target.result);\r\n                    currentChunk++;\r\n                    if (currentChunk < chunks) {\r\n                        loadNext();\r\n                    } else {\r\n                        let result = spark.end(false);\r\n                        console.debug('computed hash', file.name, result);\r\n                        window.localStorage.setItem(localKey, result);\r\n                        uppy_.setFileMeta(selectedFile.id, {\r\n                            md5: result\r\n                        })\r\n                        resolve(result);\r\n                    }\r\n                };\r\n\r\n                function loadNext() {\r\n                    let start = currentChunk * chunkSize;\r\n                    let end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\r\n                    fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\r\n                }\r\n\r\n                fileReader.onerror = function (obj, ev) {\r\n                    console.log('oops, something went wrong.', obj, ev);\r\n                    reject('oops, something went wrong.')\r\n                };\r\n                loadNext();\r\n            });\r\n        }\r\n        uppy.on('upload-success', (file, response) => {\r\n            let md5 = file.meta.md5;\r\n            if (!md5) {\r\n                console.warn(\"Md5 Not Found\", file);\r\n                return;\r\n            }\r\n            let result = {\r\n                id: response.uploadURL.substring(response.uploadURL.lastIndexOf(\"/\") + 1),\r\n                url: response.uploadURL,\r\n                file: file.data,\r\n                type: file.meta.type || file.data.type\r\n            }\r\n            this.opts.onUpload(result);\r\n        });\r\n    }\r\n\r\n    install() {\r\n        this.uppy.addPreProcessor(this.prepareUpload);\r\n    }\r\n\r\n    uninstall() {\r\n        this.uppy.removePreProcessor(this.prepareUpload);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/spark-md5/spark-md5.js\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}